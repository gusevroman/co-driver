{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "eslint-config-airbnb/base",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "simple-import-sort",
    "react",
    "prettier"
  ],
  "rules": {
    "linebreak-style": 0,
    "max-len": [
      "warn",
      {
        "code": 100
      }
    ],
    "prettier/prettier": "error",
    "react/boolean-prop-naming": [
      "warn",
      {
        "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+",
        "message": "It is better if your prop ({{ propName }}) starts with `is` or `has`",
        "validateNested": true
      }
    ],
    "no-await-in-loop": "off",
    "no-restricted-syntax": "off",
    "no-console": "warn",
    "no-new": "warn",
    "no-shadow": "off",
    "no-warning-comments": "warn",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "no-multiple-empty-lines": [
      "warn",
      {
        "max": 1,
        "maxBOF": 0,
        "maxEOF": 0
      }
    ],
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": "off",
    "indent": [
      "error",
      2
    ],
    "import/extensions": [
      "error",
      "never",
      {
        "js": "never",
        "ts": "never"
      }
    ],
    "quotes": [
      "error",
      "single"
    ],
    "semi": [
      "error",
      "always"
    ],
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          // Packages `react` related packages come first.
          [
            "^react",
            "^@?\\w"
          ],
          // Internal packages.
          [
            "^(@|~|src|components)(/.*|$)"
          ],
          // Side effect imports.
          [
            "^\\u0000"
          ],
          // Parent imports. Put `..` last.
          [
            "^\\.\\.(?!/?$)",
            "^\\.\\./?$"
          ],
          // Other relative imports. Put same-folder imports and `.` last.
          [
            "^\\./(?=.*/)(?!/?$)",
            "^\\.(?!/?$)",
            "^\\./?$"
          ],
          // Style imports.
          [
            "^.+\\.?(css)$"
          ]
        ]
      }
    ]
  }
}
